<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">

	<context:component-scan base-package="com.spring.biz "></context:component-scan>

	<!-- AOP 설정 (xmlns:aop 추가)-->
	<!-- *Impl 클래스의 모든 메소드 실행 전  -->
	<bean id="log" class="com.spring.biz.common.LogAdvice" />
	<aop:config>
		<aop:pointcut expression="execution(* com.spring.biz..*Impl.*(..))" id="allPointcut"/>
			<!-- pointcut이 핵심 관심 -->
		<!-- * 리턴 타입 상관없고 -->
		<!-- biz. 온점 한 개 해당 패키지에 있는 biz.. 온점 두 개 해당 패키지 하위에 있는 모든 패키지 (board, common, 등등 모두) -->
		<!-- *Impl로 끝나는 클래스에  -->
		<!-- * 메소드 이름 상관없고 -->
		<!-- (..) 파라미터  .온점 한 개: ..온점 두 개: 파라미터 개수 상관 없이 -->
		<aop:aspect ref="log">
			<aop:before pointcut-ref="allPointcut" method="printLog"/>
			<!-- 적용할 횡단 관심 (부차적인 일, 코드) -->
		</aop:aspect>
	</aop:config>
	
</beans>
