package com.spring.biz.common;

import javax.xml.ws.ServiceMode;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Pointcut;

import com.spring.biz.user.UserVO;

@ServiceMode
@Aspect
public class AfterReturningAdvice {

	//포인트컷 작성 : 명칭은 메소드명 사용
	@Pointcut("execution(* com.spring.biz..*Impl.*(..))")
	public void allPointcut() {}
	
	@Pointcut("execution(* com.spring.biz..*Impl.get*(..))")
	public void getPointcut() {}
	
	
	// returnObj : 추가 바인드변수를 사용시에는 스프링 설정 파일에 작성 추가
	public void afterReturnLog(JoinPoint jp, Object returnObj) {
		//정상실행시 전달받을 returnObj는 Spring framework에 지정해 줘야 함
		String methodName = jp.getSignature().getName();
		
		//리턴받은 객체를 확인하고 필요한 작업 처리
		if (returnObj instanceof UserVO) {
			UserVO vo = (UserVO) returnObj;
			if ("admin".equalsIgnoreCase(vo.getRole())) {
				System.out.println(vo.getName() + "-로그인(Admin)");
			} else {
				System.out.println(vo.getName() + "-로그인");				
			}
		}
		
		System.out.println("[후처리-정상처리]" + methodName + "()메소드, "
				+ "리턴값: " + returnObj);
		
	
	}
	
}
